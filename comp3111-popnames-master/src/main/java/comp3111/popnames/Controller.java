/**
 * Building on the sample skeleton for 'ui.fxml' COntroller Class generated by SceneBuilder 
 */
package comp3111.popnames;

import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Tab;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;


public class Controller {

    @FXML
    private Tab tabTaskZero;

    @FXML
    private TextField textfieldNameF;

    @FXML
    private TextField textfieldYear;

    @FXML
    private Button buttonRankM;

    @FXML
    private TextField textfieldNameM;

    @FXML
    private Button buttonRankF;

    @FXML
    private Button buttonTopM;

    @FXML
    private Button buttonTopF;

    @FXML
    private Button buttonSummary;
    
    /*   TASK 1 ELEMENTS   */
    
    @FXML
    private TextField T1_N_TextField;

    @FXML
    private RadioButton T1_male_RadioButton;

    @FXML
    private ToggleGroup T1;

    @FXML
    private RadioButton T1_female_RadioButton;

    @FXML
    private TextField T1_endYear_TextField;

    @FXML
    private TextField T1_startYear_TextField;

    @FXML
    private Button T1_generateReport_Button;
    
    /*   TASK 2 ELEMENTS   */
    
    @FXML
    private Tab tabReport2;

    @FXML
    private ToggleGroup T11;

    @FXML
    private Tab tabReport3;

    @FXML
    private TextField t3EndYear;

    @FXML
    private TextField t3StartYear;

    @FXML 
    private RadioButton T3Male;

    @FXML 
    private RadioButton T3Female;

    @FXML
    private ToggleGroup T111;

    @FXML
    private Tab tabApp1;

    @FXML
    private Tab tabApp2;

    @FXML
    private Tab tabApp3;

    @FXML
    private TextArea textAreaConsole;
    

    /**
     *  Task Zero
     *  To be triggered by the "Summary" button on the Task Zero Tab 
     *  
     */
    @FXML
    void doSummary() {
    	int year = Integer.parseInt(textfieldYear.getText());
    	String oReport = AnalyzeNames.getSummary(year);
    	textAreaConsole.setText(oReport);
    }

  
    /**
     *  Task Zero
     *  To be triggered by the "Rank (female)" button on the Task Zero Tab
     *  
     */
    
    @FXML
    void doRankF() {
    	String oReport = "";
    	String iNameF = textfieldNameF.getText();
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	int oRank = AnalyzeNames.getRank(iYear, iNameF, "F");
    	if (oRank == -1)
    		oReport = String.format("The name %s (female) has not been ranked in the year %d.\n", iNameF, iYear);
    	else
    		oReport = String.format("Rank of %s (female) in year %d is #%d.\n", iNameF, iYear, oRank);
    	textAreaConsole.setText(oReport);
    }

    /**
     *  Task Zero
     *  To be triggered by the "Rank (male)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doRankM() {
    	String oReport = "";
    	String iNameM = textfieldNameM.getText();
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	int oRank = AnalyzeNames.getRank(iYear, iNameM, "M");
    	if (oRank == -1)
    		oReport = String.format("The name %s (male) has not been ranked in the year %d.\n", iNameM, iYear);
    	else
    		oReport = String.format("Rank of %s (male) in year %d is #%d.\n", iNameM, iYear, oRank);
    	textAreaConsole.setText(oReport);
    }


    /**
     *  Task Zero
     *  To be triggered by the "Top 5 (female)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doTopF() {
    	String oReport = "";
    	final int topN = 5;
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	oReport = String.format("Top %d most popular names (female) in the year %d:\n", topN, iYear);
    	for (int i=1; i<=topN; i++)
    		oReport += String.format("#%d: %s\n", i, AnalyzeNames.getName(iYear, i, "F"));
    	textAreaConsole.setText(oReport);
    }


    /**
     *  Task Zero
     *  To be triggered by the "Top 5 (male)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doTopM() {
    	String oReport = "";
    	final int topN = 5;
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	oReport = String.format("Top %d most popular names (male) in the year %d:\n", topN, iYear);
    	for (int i=1; i<=topN; i++)
    		oReport += String.format("#%d: %s\n", i, AnalyzeNames.getName(iYear, i, "M"));
    	textAreaConsole.setText(oReport);
    }
    
    /**
     *  Task One
     *  To be triggered by the "Generate Report" button on the Task One Tab
     *  
     */
    @FXML
    void generateTopNNames() {
    	/* Variables */
    	int numOfNames = -1;
    	int startYear = -1;
    	int endYear = -1;
    	String gender;
    	boolean anyErrors = false;
    	String output = "";
    	
    	/*
    	 * 		Input Validation:
    	 * 	T1_N_TextField 			-> 	An integer that is greater than 0.
    	 * 	T1_startYear_TextField 	-> 	An integer that is between 1880 and 2019.
    	 * 	T1_endYear_TextField	->	An integer that is between T1_startYear_TextField 
    	 * 								and 2019 inclusively. ( T1_startYear_TextField has
    	 * 								to be valid first )
    	 * 	T1_male_RadioButton		->	No need to check.
    	 * 	T1_female_RadioButton	->	No need to check.
    	 */
    	// Try block: https://stackoverflow.com/questions/6893958/check-if-a-jtextfield-is-a-number
    	// Handle N
    	try {
    		numOfNames = Integer.parseInt(T1_N_TextField.getText());
    		if(numOfNames < 1) {
    			anyErrors = true;
        		output += "N is less than 1\n";
    		}
    	} catch(NumberFormatException e) {
    		anyErrors = true;
    		output += "N is not an integer.\n";
    	}
    	// Handle start year
    	try {
    		startYear = Integer.parseInt(T1_startYear_TextField.getText());
    		if(startYear > 2019 || startYear < 1880) {
    			anyErrors = true;
        		output += "The start year is out of bounds (1880-2019).\n";
    		}
    	} catch(NumberFormatException e) {
    		anyErrors = true;
    		output += "The start year is not an integer.\n";
    	}
    	// Handle End Year
    	if(startYear != -1) {
    		// Only check the end year if the start year is valid
    		try {
        		endYear = Integer.parseInt(T1_endYear_TextField.getText());
        		if(endYear > 2019 || endYear < startYear) {
        			anyErrors = true;
            		output += String.format("The end year is out of bounds (%d-2019).\n",startYear);
        		}
        	} catch(NumberFormatException e) {
        		anyErrors = true;
        		output += "The end year is not an integer.\n";
        	}
    	}
    	
    	if(!anyErrors) {
    		// All inputs are valid, now to display the desired output.
    		gender = (T1_male_RadioButton.isSelected())?"M":"F";
    		TopNNames results = new TopNNames(startYear, endYear, numOfNames, gender,"usa", "human");
    		
    		output += String.format("Top %d Names From %d to %d:\n",numOfNames, startYear, endYear);
    		output += "Rank\tName\t\tFrequency\n";
    		for(int rank = 0; rank < numOfNames; ++rank) {
    			String name = results.getNameFromIndex(rank);
    			if(name.length() < 6) name+="";
    			output += String.format("%5d\t%s\t\t%d\n",
    					(rank+1), 
    					name, 
    					results.getFrequenctFromIndex(rank)
    				);
    		}
    	}
		textAreaConsole.setText(output);
    }
    
    /**
    Task 3
    To be Triggered by the Generate report button on Task 3 Tab
    **/
    
    @FXML
    void trendInPopularity() {
   	    // String oReport = "";
        int iStartYear = Integer.parseInt(t3StartYear.getText());
        int iEndYear = Integer.parseInt(t3EndYear.getText());
        boolean male = T3Male.isSelected();
        boolean female = T3Female.isSelected();
        String gender;
        if (male && female){
            gender = "B";
        }
        else if (male) gender = "M";
        else gender = "F";

   	    // error handling/ boundary checking
//    	if(task3val()) {
////        	RedioButton selectedGender = (RadioButton) T111.getSelectedToggle();
////        	String gender = T111.getText();
//
//        	oReport = String.format("Start: %d End: %d:\n", iStartYear, iEndYear);
//    	}else {
//    		oReport+=("Error in")
//    	}
//
        String status = "Generating Report\n";
       	textAreaConsole.setText(status);
        TrendInPopularity rep = new TrendInPopularity(iStartYear,iEndYear,gender,"usa","human");
//		oReport += gender + "\n";
        status += "Preparing data\n";
       	textAreaConsole.setText(status);
        rep.prepare();
        status += "Processing data\n";
        textAreaConsole.setText(status);
        rep.preprocess();
        rep.generate();
        textAreaConsole.setText(rep.getoReport());

    }

}

